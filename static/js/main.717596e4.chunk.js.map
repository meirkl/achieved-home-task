{"version":3,"sources":["store.js","styles/breaks.js","components/Button.js","styles/colors.js","components/Navigation.js","components/Question.js","components/QuizBox.js","components/Score.js","media/clock.svg","components/Timer.js","hooks/useInterval.js","components/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","useStore","useContext","initialState","currentQuestion","questions","userAnswers","Array","length","fill","score","done","reducer","state","action","type","payload","forEach","answer","i","answers","correct","Math","floor","calculateScore","children","Provider","value","useReducer","StyledButton","styled","button","props","color","Button","text","StyledNavigation","div","Navigation","dispatch","navBtn","disabled","onClick","StyleQuestion","p","Question","title","Wrapper","ul","Item","li","Check","span","checked","QuizBox","selectAnswer","map","key","StyledScore","breaks","Score","getScoreText","useCallback","role","aria-label","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","transform","d","className","_ref","svgRef","id","x","y","viewBox","style","enableBackground","xmlSpace","width","height","ref","ForwardRef","forwardRef","StyledTimer","Timer","minutes","maxTime","useState","time","setTime","isRunning","setIsRunning","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","currTime","max","QuestionIndex","Quiz","question","answerNumber","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.717596e4.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\nimport questions from './questions.json';\r\n\r\nexport const StoreContext = createContext();\r\nexport const useStore = () => useContext(StoreContext);\r\n\r\nexport const NEXT = 'NEXT';\r\nexport const PREV = 'PREV';\r\nexport const DONE = 'DONE';\r\nexport const RESET = 'RESET';\r\nexport const ANSWER = 'ANSWER';\r\n\r\nconst initialState = {\r\n  currentQuestion: 0,\r\n  questions,\r\n  userAnswers: Array(questions.length).fill(-1),\r\n  score: 0,\r\n  done: false\r\n};\r\n\r\nfunction calculateScore(state) {\r\n  const { userAnswers, questions } = state;\r\n  let score = 0;\r\n  userAnswers.forEach((answer, i) => {\r\n    if (answer > -1 && questions[i].answers[answer].correct) {\r\n      score++;\r\n    }\r\n  });\r\n  return Math.floor((score / userAnswers.length) * 100);\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case NEXT:\r\n      return state.currentQuestion < questions.length - 1\r\n        ? {\r\n            ...state,\r\n            currentQuestion: state.currentQuestion + 1\r\n          }\r\n        : state;\r\n    case PREV:\r\n      return state.currentQuestion > 0\r\n        ? {\r\n            ...state,\r\n            currentQuestion: state.currentQuestion - 1\r\n          }\r\n        : state;\r\n    case ANSWER:\r\n      state.userAnswers[state.currentQuestion] = action.payload;\r\n      return {\r\n        ...state,\r\n        userAnswers: state.userAnswers\r\n      };\r\n    case DONE:\r\n      let score = calculateScore(state);\r\n      return {\r\n        ...state,\r\n        score,\r\n        done: true\r\n      };\r\n    case RESET:\r\n      return {\r\n        currentQuestion: 0,\r\n        questions,\r\n        userAnswers: Array(questions.length).fill(-1),\r\n        score: 0,\r\n        done: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ({ children }) => (\r\n  <StoreContext.Provider value={useReducer(reducer, initialState)} children={children} />\r\n);\r\n","export default {\r\n  break1: '(max-width: 576px)',\r\n  break2: '(min-width: 577px) and (max-width: 1199px)',\r\n  break3: '(min-width: 1200px)'\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { lightBlue, white } from '../styles/colors';\r\n\r\nconst StyledButton = styled.button`\r\n  color: ${white};\r\n  background-color: ${props => (props.color ? `${props.color}` : `${lightBlue}`)};\r\n  border: none;\r\n  border-radius: 25px;\r\n  padding: 15px 30px;\r\n  margin: 10px;\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  text-transform: capitalize;\r\n  :disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst Button = ({ text, ...props }) => {\r\n  return <StyledButton {...props}>{text}</StyledButton>;\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Button;\r\n","export const white = '#fff';\r\nexport const lightBlue = '#1280ea';\r\nexport const success = '#00d665';\r\nexport const inconclusive = '#ffc300';\r\nexport const failure = '#ff3751';\r\nexport const lightBorder = '#264767 ';\r\nexport const darkBorder = '#424069';\r\nexport const backGround = '#252c4a';\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DONE, NEXT, PREV, useStore } from '../store';\r\nimport Button from './Button';\r\n\r\nconst StyledNavigation = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Navigation = () => {\r\n  const [state, dispatch] = useStore();\r\n  return (\r\n    <StyledNavigation>\r\n      <Button\r\n        text=\"prev\"\r\n        navBtn\r\n        disabled={state.currentQuestion === 0}\r\n        onClick={() => dispatch({ type: PREV })}\r\n      />\r\n      {state.currentQuestion === state.questions.length - 1 ? (\r\n        <Button text=\"done\" onClick={() => dispatch({ type: DONE })} />\r\n      ) : (\r\n        <Button text=\"next\" onClick={() => dispatch({ type: NEXT })} />\r\n      )}\r\n    </StyledNavigation>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleQuestion = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Question = props => {\r\n  return <StyleQuestion>{props.title}?</StyleQuestion>;\r\n};\r\n\r\nQuestion.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useStore } from '../store';\r\nimport { lightBlue, lightBorder } from '../styles/colors';\r\n\r\nconst Wrapper = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  position: relative;\r\n  border: ${lightBorder} solid 1.5px;\r\n  border-radius: 12px;\r\n  margin: 15px 0px;\r\n  padding: 10px 10px;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst Check = styled.span`\r\n  position: absolute;\r\n  width: 25px;\r\n  height: 25px;\r\n  border: ${lightBorder} solid 1.5px;\r\n  border-radius: 50%;\r\n  top: 50%;\r\n  right: 12px;\r\n  transform: translateY(-50%);\r\n  background-color: ${props => (props.checked ? `${lightBlue}` : 'transparent')};\r\n  ::after {\r\n    content: '${props => (props.checked ? '✔\\fe0e' : ' ')}';\r\n    position: relative;\r\n    width: 10px;\r\n    left: 15%;\r\n    top: -15%;\r\n  }\r\n`;\r\n\r\nconst QuizBox = ({ selectAnswer }) => {\r\n  const [{ questions, currentQuestion, userAnswers }] = useStore();\r\n\r\n  return (\r\n    <Wrapper>\r\n      {questions[currentQuestion].answers.map((answer, i) => (\r\n        <Item key={i} onClick={() => selectAnswer(i)}>\r\n          {answer.text}\r\n          <Check checked={i === userAnswers[currentQuestion]} />\r\n        </Item>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nQuizBox.propTypes = {\r\n  selectAnswer: PropTypes.func.isRequired\r\n};\r\n\r\nexport default QuizBox;\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { RESET, useStore } from '../store';\r\nimport breaks from '../styles/breaks';\r\nimport { failure, inconclusive, success } from '../styles/colors';\r\nimport Button from './Button';\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n  button {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\nconst StyledScore = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: ${props => {\r\n    if (props.score < 40) return `${failure}`;\r\n    else if (props.score >= 40 && props.score < 70) return `${inconclusive}`;\r\n    return `${success}`;\r\n  }};\r\n  border-radius: 10px;\r\n  div {\r\n    text-align: center;\r\n    @media ${breaks.break1} {\r\n      h3 {\r\n        font-size: 1.9rem;\r\n      }\r\n      h4 {\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n    @media ${breaks.break2} {\r\n      h3 {\r\n        font-size: 2.5rem;\r\n      }\r\n      h4 {\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n    @media ${breaks.break3} {\r\n      h3 {\r\n        font-size: 3rem;\r\n      }\r\n      h4 {\r\n        font-size: 2.5rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Score = () => {\r\n  const [{ score }, dispatch] = useStore();\r\n  const getScoreText = useCallback(() => {\r\n    if (score < 40)\r\n      return (\r\n        <>\r\n          <h3>\r\n            Shame...{' '}\r\n            <span role=\"img\" aria-label=\"Crying Face\">\r\n              😢\r\n            </span>\r\n          </h3>\r\n          <h4>See you again?</h4>\r\n        </>\r\n      );\r\n    else if (score >= 40 && score < 70)\r\n      return (\r\n        <>\r\n          <h3>\r\n            You can do better...{' '}\r\n            <span role=\"img\" aria-label=\"Smirking Face\">\r\n              😏\r\n            </span>\r\n          </h3>\r\n          <h4>See you again?</h4>\r\n        </>\r\n      );\r\n    return (\r\n      <>\r\n        <h3>\r\n          Congratulations!{' '}\r\n          <span role=\"img\" aria-label=\"Smiling Face With Sunglasses\">\r\n            😎\r\n          </span>\r\n        </h3>\r\n        <h4>Well played...</h4>\r\n      </>\r\n    );\r\n  }, [score]);\r\n  return (\r\n    <Wrapper>\r\n      <StyledScore score={score}>\r\n        <div>\r\n          {getScoreText()}\r\n          <h3>Your score is: {score}</h3>\r\n        </div>\r\n      </StyledScore>\r\n      <Button text=\"restart\" color={success} onClick={() => dispatch({ type: RESET })}></Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"matrix(1 0 0 1 0 0)\"\n}, React.createElement(\"path\", {\n  d: \"M20.642,0c5.698,0,10.857,2.317,14.602,6.047c3.73,3.746,6.047,8.905,6.047,14.603  c0,5.698-2.317,10.857-6.047,14.603c-3.746,3.73-8.904,6.047-14.602,6.047S9.786,38.983,6.056,35.253  C2.31,31.507,0.008,26.349,0.008,20.65c0-5.698,2.301-10.857,6.047-14.603C9.786,2.317,14.944,0,20.642,0L20.642,0z M31.166,19.523  c0.619,0,1.111,0.508,1.111,1.127c0,0.619-0.492,1.127-1.111,1.127H20.674h-0.032c-0.413,0-0.778-0.238-0.968-0.571l-0.016-0.016  l0,0l-0.016-0.032l0,0v-0.016l0,0l-0.016-0.032l0,0l-0.016-0.032l0,0v-0.016l0,0l-0.016-0.032l0,0l-0.016-0.016l0,0v-0.032l0,0  l-0.016-0.032l0,0v-0.016l0,0l-0.016-0.032l0,0v-0.032l0,0v-0.016v-0.016l-0.016-0.016l0,0v-0.032l0,0v-0.032l0,0V20.73l0,0v-0.016  l0,0v-0.032l0,0V20.65l0,0V7.206c0-0.619,0.492-1.111,1.111-1.111c0.619,0,1.127,0.492,1.127,1.111v12.317H31.166z M33.657,7.635  c-3.333-3.333-7.936-5.381-13.015-5.381S10.96,4.301,7.627,7.635C4.31,10.968,2.246,15.571,2.246,20.65  c0,5.079,2.063,9.682,5.381,13.016c3.333,3.333,7.936,5.381,13.015,5.381s9.682-2.048,13.015-5.381  c3.333-3.333,5.397-7.936,5.397-13.016C39.054,15.571,36.991,10.968,33.657,7.635L33.657,7.635z\",\n  \"data-original\": \"#1E201D\",\n  className: \"active-path\",\n  \"data-old_color\": \"#1E201D\",\n  fill: \"#424069\"\n}));\n\nvar SvgClock = function SvgClock(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 41.301 41.301\",\n    style: {\n      enableBackground: \"new 0 0 41.301 41.301\"\n    },\n    xmlSpace: \"preserve\",\n    width: \"512px\",\n    height: \"512px\",\n    className: \"\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgClock, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/clock.9922af30.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport useInterval from '../hooks/useInterval';\r\nimport { ReactComponent as Clock } from '../media/clock.svg';\r\nimport { DONE, useStore } from '../store';\r\nimport { darkBorder } from '../styles/colors';\r\n\r\nconst StyledTimer = styled.div`\r\n  position: relative;\r\n  margin: 20px 0px;\r\n  span {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(50%, -50%);\r\n    font-weight: bold;\r\n  }\r\n  svg {\r\n    width: 20px;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 10px;\r\n    transform: translateY(-50%);\r\n  }\r\n  progress {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    border: none;\r\n    background-size: auto;\r\n    height: 40px;\r\n    width: 100%;\r\n    ::-webkit-progress-bar {\r\n      border: ${darkBorder} solid 1.5px;\r\n      border-radius: 18px;\r\n      background: transparent;\r\n      padding: 2px;\r\n    }\r\n    ::-webkit-progress-value {\r\n      border-radius: 18px;\r\n      background: #f03baf;\r\n      background-image: linear-gradient(to right, #fc4f6f, #fc3f8d, #f03baf, #d646d3, #a85af5);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Timer = ({ minutes }) => {\r\n  const maxTime = minutes * 60;\r\n  const [{ done }, dispatch] = useStore();\r\n  const [time, setTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(!done);\r\n\r\n  const timer = () => {\r\n    if (time < maxTime) {\r\n      setTime(currTime => currTime + 1);\r\n    } else {\r\n      setIsRunning(false);\r\n      dispatch({ type: DONE });\r\n    }\r\n  };\r\n  useInterval(timer, isRunning ? 1000 : null);\r\n\r\n  return (\r\n    <StyledTimer time={time}>\r\n      <Clock />\r\n      <span>{time}</span>\r\n      <progress value={(maxTime - time) / minutes} max={maxTime / minutes}></progress>\r\n    </StyledTimer>\r\n  );\r\n};\r\n\r\nTimer.propTypes = {\r\n  maxTime: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Timer;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    const tick = () => savedCallback.current();\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ANSWER, useStore } from '../store';\r\nimport breaks from '../styles/breaks';\r\nimport Navigation from './Navigation';\r\nimport Question from './Question';\r\nimport QuizBox from './QuizBox';\r\nimport Score from './Score';\r\nimport Timer from './Timer';\r\n\r\nconst Wrapper = styled.div`\r\n  padding-top: 50px;\r\n  @media ${breaks.break1} {\r\n    margin: 20px 8vw;\r\n    padding-top: 10px;\r\n  }\r\n  @media ${breaks.break2} {\r\n    margin: 20px 12vw;\r\n  }\r\n  @media ${breaks.break3} {\r\n    margin: 20px 20vw;\r\n  }\r\n`;\r\n\r\nconst QuestionIndex = styled.p`\r\n  opacity: 0.7;\r\n  span {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Quiz = () => {\r\n  const [{ questions, currentQuestion, done }, dispatch] = useStore();\r\n  const selectAnswer = answerNumber => {\r\n    dispatch({ type: ANSWER, payload: answerNumber });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      {!done ? (\r\n        <>\r\n          <Timer minutes={2} />\r\n          <QuestionIndex>\r\n            <span>{`Question ${currentQuestion + 1}`}</span>\r\n            {`/ ${questions.length}`}\r\n          </QuestionIndex>\r\n          <Question title={questions[currentQuestion].question} />\r\n          <QuizBox selectAnswer={selectAnswer} />\r\n          <Navigation />\r\n        </>\r\n      ) : (\r\n        <Score />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Quiz from './components/Quiz';\nimport Store from './store';\nimport { backGround, white } from './styles/colors';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700&display=swap');\n* {\n  font-family: 'Open Sans', sans-serif;\n}\n*, *::before, *::after {\n  box-sizing: border-box;\n}\nbody {\n  padding: 0;\n  margin: 0;\n  background-color: ${backGround};\n  color: ${white}; \n}\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Store>\n        <Quiz />\n      </Store>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}